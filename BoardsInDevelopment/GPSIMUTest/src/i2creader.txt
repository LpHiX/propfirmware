#include <Arduino.h>
#include <Wire.h>

// Define I2C pins
const int SDA_PIN = 16;
const int SCL_PIN = 17;

// MPU6050 address
#define MPU6050_ADDR 0x68
// MPU6050 registers
#define MPU6050_PWR_MGMT_1 0x6B
#define MPU6050_USER_CTRL 0x6A
#define MPU6050_INT_PIN_CFG 0x37

// Function to write to MPU6050 register
void writeMPU6050Register(uint8_t reg, uint8_t data) {
  Wire.beginTransmission(MPU6050_ADDR);
  Wire.write(reg);
  Wire.write(data);
  Wire.endTransmission();
}

void setup() {
  Serial.begin(115200);
  while (!Serial) delay(10); // Wait for serial port to connect
  
  Serial.println("\nI2C Scanner for ESP32-S3-DevKitC with GY-87");
  Serial.println("SDA Pin: 16, SCL Pin: 17");
  
  // Initialize I2C with specified pins
  Wire.begin(SDA_PIN, SCL_PIN);
  Wire.setClock(100000);
  
  // Initialize MPU6050
  writeMPU6050Register(MPU6050_PWR_MGMT_1, 0x00); // Wake up MPU6050
  delay(100);
  
  // Enable I2C bypass to access the magnetometer directly
  writeMPU6050Register(MPU6050_USER_CTRL, 0x00);  // Disable master mode
  // Try this alternative bypass mode setting
  writeMPU6050Register(MPU6050_INT_PIN_CFG, 0x22); // Enable bypass mode with different flag
  delay(100);
}

void loop() {
  byte error, address;
  int deviceCount = 0;
  
  Serial.println("Scanning for I2C devices...");
  
  // Scan addresses 1-127 (0x01-0x7F)
  for (address = 1; address < 128; address++) {
    // The i2c_scanner uses the return value of
    // the Write.endTransmission to see if
    // a device acknowledged the address.
    Wire.beginTransmission(address);
    error = Wire.endTransmission();
    
    if (error == 0) {
      Serial.print("I2C device found at address 0x");
      if (address < 16) {
        Serial.print("0");
      }
      Serial.print(address, HEX);
      Serial.println(" !");
      deviceCount++;
    } else if (error == 4) {
      Serial.print("Unknown error at address 0x");
      if (address < 16) {
        Serial.print("0");
      }
      Serial.println(address, HEX);
    }
  }
  
  if (deviceCount == 0) {
    Serial.println("No I2C devices found\n");
  } else {
    Serial.print("Found ");
    Serial.print(deviceCount);
    Serial.println(" device(s)\n");
  }
  
  delay(5000); // Wait 5 seconds before scanning again
}
